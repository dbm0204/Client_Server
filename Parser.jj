/* ------------------------------------------------------------------------- */
/*   Copyright (C) 2016 
Author:  bmathew2014@my.fit.edu
Author:  rbabbitt2014@my.fit.edu
Florida Tech, Computer Science

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published 
by the Free Software Foundation; either the current version of the 
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.              */

options {
    STATIC = false;
}

PARSER_BEGIN(Parser)

import java.util.ArrayList;
import java.io.BufferedWriter;

public class Parser {
  static Database db = null;

  public static void main(String args[]) {
  }
  
  public void setDatabase(Database db) {
    this.db = db;
  }
}

PARSER_END(Parser)

/*  COMMANDS    */
TOKEN: {
  <PROJECT_DEFINITION: "PROJECT_DEFINITION">
| <TASKS: "TASKS">
| <TAKE: "TAKE">
| <USER: "USER">
| <PROJECT: "PROJECT">
| <GET_PROJECTS: "GET_PROJECTS">
| <GET_PROJECT: "GET_PROJECT">
| <EXIT: "EXIT">
}


/*  TIME    */
TOKEN: {
  <#YEAR: <DIGIT><DIGIT><DIGIT><DIGIT>>
| <#MONTH: "0"["0"-"9"] | "1"["0"-"2"]>
| <#DAY: <DIGIT><DIGIT>>
| <#DATE: <YEAR>"-"<MONTH>"-"<DAY>>
| <#HOUR: (["0"-"5"]["0"-"9"] | "60")"h">
| <#MINUTES:(["0"-"5"]["0"-"9"] | "60")"m">
| <#SECONDS: (["0"-"5"]["0"-"9"] | "60")"s">
| <#MILISECONDS: <DIGIT><DIGIT><DIGIT>"Z">
| <#TIME: <HOUR><MINUTES><SECONDS><MILISECONDS>>
| <DATETIME: <DATE>":"<TIME>>
}

TOKEN: {
  <EOL: "\n" | "\r" | "\r\n" >
| <END: ";">
| <COLON: ":">
| <DIGIT: ["0"-"9"]>
| <LETTER: ["a"-"z", "A"-"Z"]>
| <VARIABLE: <LETTER> (<LETTER> | <DIGIT> | " ")* >
| <SPECIAL: ~[] >
}


void parse(): 
{}
{
    try {
        (<GET_PROJECT><END> { get_project(); }
        |<PROJECT_DEFINITION><COLON>{ project_definition(); }
        |<TAKE><END> { take(); }
        |<GET_PROJECTS> { get_projects(); }
        |{ return; }) 
        <EOL> { parse(); }
    } catch (ParseException e) {
        Token token=null;
        do {
            token = getNextToken();
        } while (token.kind != EOL);
    }
}

void project_definition():
{ Token proj=null, tasks=null; ASNProject project; }
{
    proj=<VARIABLE><END>
    <TASKS><COLON> tasks=<DIGIT><END>
    {
        project = new ASNProject();
    }
    (task(project))*
    {
        System.out.println(project.toString());
    }
}

void task(ASNProject project):
{ Token task=null, start=null, end=null; boolean success=false; }
{
    task=<VARIABLE><END>
    start=<DATETIME><END>
    end=<DATETIME><END>
    { 
        project.addTask(new ASNTask(task.toString(),
                                    start.toString(),
                                    end.toString()));
    }
}

void take():
{ Token user=null, proj=null, task=null; boolean success=false; }
{
    <USER><COLON> user=<VARIABLE> <END>
    <PROJECT><COLON> proj=<VARIABLE> <END>
    task=<VARIABLE>
    {
        ASNTake take;
        take = new ASNTake(proj.toString(), task.toString(), user.toString());
        System.out.println(take.toString());
    }
}

void get_projects():
{}
{
    {
        ASNProjects getProjects = new ASNProjects();
        System.out.println(getProjects.toString());
    }
}

void get_project():
{ Token project=null; }
{
    project=<VARIABLE>
    {
        ASNGetProject getProject = new ASNGetProject();
        System.out.println(getProject.toString());
    } 
}

